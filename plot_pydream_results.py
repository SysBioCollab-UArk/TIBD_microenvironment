import os
import sys
# import the run_<...>_pydream file from the directory where you ran PyDREAM from
dirpath = os.path.join('MODELS', 'SAVE', 'Leonard', 'Bennett2024_Johnson2011_stderr_2abs')
sys.path.insert(0, dirpath)
from run_tibd_pydream import *
from pydream_util import plot_pydream_output
from plot_pydream_hist_overlays import plot_hist_overlays

# sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'earm'))
# from run_earm_pydream import *

# create the ParameterCalibration object
calibrator = ParameterCalibration(model,
                                  expt_data_file,
                                  sim_protocols,
                                  priors=custom_priors,
                                  no_sample=no_sample,
                                  param_expts_map=param_expts_map)

#### Create plots using output files already generated by PyDREAM and the 'create_figures' function ####
kwargs = {'obs_labels': obs_labels, 'show_plots': True,
          'plot_ll_args': {'cutoff': 2, 'fontsizes': {'labels': 14, 'ticks': 14, 'legend': 14}, 'leg_ncols': 2},
          'plot_pd_args': {'sharex': 'all', 'fontsize': 28, 'labelsize': 24, 'bw_adjust': 3},
          'plot_tc_args': {'separate_plots': False, 'save_sim_data': True},
          'which_plots': 2}  # 1: only log-likelihoods, 2: log-likelihoods & param histograms, 3 or 'all': all plots

return_objs = plot_pydream_output(dirpath, calibrator, **kwargs)

# if parameter distributions were generated, check if there are multiple groups to overlap and compare
group_labels = ('Bone-Metastatic', 'Parental', 'ALL')  # the last label should be 'ALL'
if return_objs[1] is not None:
    samples, groups, param_labels = return_objs[1]
    groups_idxs = np.arange(len(groups))
    group_pairs = set(tuple(sorted((a, b))) for a in groups_idxs for b in groups_idxs if a != b)
    # if there's only one group, there will be no pairs and the code won't proceed into the 'for' loop
    for group_pair in group_pairs:
        x, y = param_labels[group_pair[0]], param_labels[group_pair[1]]
        # if the two lists of labels are identical, plot the histogram overlays
        if len(x) == len(y) and all(x[i] == y[i] for i in range(len(x))):
            kwargs = {
                'fontsizes': {'labels': 20, 'ticks': 18, 'title': 18, 'legend': 14},
                'bw_adjust': (3.0, 3.0),  # histogram smoothing parameters (default = 1, > 1 = smoother)
                'sharex': False,
                'table_props': {'fontsize': 20, 'ncols': 2, 'scale': (1, 2), 'nudge': (0.01, 0)},
                'barplot_ymax': 1.02
            }
            plot_hist_overlays(
                two_samples=tuple(samples[:, groups[group_pair[i]]] for i in range(2)),
                param_labels=param_labels[group_pair[0]],
                hist_labels=tuple(group_labels[group_pair[i]] for i in range(2)),
                show_plots=True, save_plots=dirpath, **kwargs
            )

# plt.xlim(left=2e5)
# plt.ylim(bottom=-2000, top=-1500)

# plt.show()
